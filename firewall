#!/bin/bash

clear

echo -e "######################################################################################
#                                                                                    #
#                            Project 'RHQ - Firewall'                                #
#                                                                                    #
######################################################################################\n"

show_menu() {
    echo "Select an option:"
    echo "1. Clear Firewall ${CHECKMARK1:-}"
    echo "2. List Firewall Rules ${CHECKMARK2:-}"
    echo "3. Restart Services ${CHECKMARK3:-}"
    echo "4. Setup Firewall ${CHECKMARK4:-}"
    echo "5. Quit"
}

add_checkmark() {
    case $1 in
        1) CHECKMARK1="✔" ;;
        2) CHECKMARK2="✔" ;;
        3) CHECKMARK3="✔" ;;
        4) CHECKMARK4="✔" ;;
    esac
}

clear_firewall() {
    echo "Clearing Firewall..."
    sudo iptables -P INPUT ACCEPT
    sudo iptables -P FORWARD ACCEPT
    sudo iptables -P OUTPUT ACCEPT
    sudo iptables -F
    sudo iptables -t nat -F
    sudo ip6tables -F
    sudo ip6tables -t nat -F
    sudo iptables -X
    sudo ip6tables -X
    sudo iptables -Z
    sudo ip6tables -Z
    echo "Firewall cleared successfully."
    add_checkmark 1
    sleep 5
}

list_firewall() {
    echo "Listing Firewall Rules..."
    echo "IPv4 Rules:"
    sudo iptables -L -v -n
    echo -e "\nIPv6 Rules:"
    sudo ip6tables -L -v -n
    add_checkmark 2
    sleep 5
}

restart_services() {
    read -p "Enter the services you want to restart: " services </dev/tty
    echo "The service/services $services will be restarted"
    sudo systemctl restart $services
    echo -e "\nThe service/services $services was/were restarted\n"
    add_checkmark 3
    sleep 5
}

setup_firewall() {
    installpackages() {
        if ! dpkg -s "$1" &> /dev/null; then
            echo -e "$1 is not installed. Installing...\n"
            echo iptables-persistent iptables-persistent/autosave_v4 boolean true | sudo debconf-set-selections
            echo iptables-persistent iptables-persistent/autosave_v6 boolean true | sudo debconf-set-selections
            sudo apt-get install -y --no-install-recommends "$1"
            echo -e "$1 has been installed successfully.\n"
        else
            echo "$1 is already installed."
        fi
    }

    firewall_install() {
        # Allow SSH connections to prevent lockout
        sudo iptables -A INPUT -p tcp --dport 22 -j ACCEPT
        sudo ip6tables -A INPUT -p tcp --dport 22 -j ACCEPT

        # Flush existing rules
        sudo iptables -F
        sudo iptables -t nat -F
        sudo ip6tables -F
        sudo ip6tables -t nat -F
        sudo iptables -X
        sudo ip6tables -X
        sudo iptables -Z
        sudo ip6tables -Z

        # Set default policy to DROP
        sudo iptables -P INPUT DROP
        sudo iptables -P FORWARD DROP
        sudo iptables -P OUTPUT ACCEPT
        sudo ip6tables -P INPUT DROP
        sudo ip6tables -P FORWARD DROP
        sudo ip6tables -P OUTPUT ACCEPT

        # Allow established connections and loopback traffic
        sudo iptables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        sudo ip6tables -A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
        sudo iptables -A INPUT -i lo -j ACCEPT
        sudo ip6tables -A INPUT -i lo -j ACCEPT

        # Drop invalid packets
        sudo iptables -A INPUT -m conntrack --ctstate INVALID -j DROP
        sudo ip6tables -A INPUT -m conntrack --ctstate INVALID -j DROP

        # Drop packets with suspicious TCP flags
        suspicious_flags=(
            "NONE" "FIN,SYN" "SYN,RST" "FIN,RST" "FIN,ACK" "ACK,URG"
            "ACK,FIN" "ACK,PSH" "ALL" "ALL,NONE" "ALL,FIN,PSH,URG"
            "ALL,SYN,FIN,PSH,URG" "ALL,SYN,RST,ACK,FIN,URG"
        )
        for flag in "${suspicious_flags[@]}"; do
            sudo iptables -A INPUT -p tcp --tcp-flags $flag -j DROP
            sudo ip6tables -A INPUT -p tcp --tcp-flags $flag -j DROP
        done

        # Drop fragmented packets
        sudo iptables -A INPUT -f -j DROP
        sudo ip6tables -A INPUT -m frag --fragid 0 -j DROP

        # Prevent SYN flood
        sudo iptables -A INPUT -p tcp --syn -m limit --limit 100/s --limit-burst 200 -j ACCEPT
        sudo iptables -A INPUT -p tcp --syn -j DROP
        sudo ip6tables -A INPUT -p tcp --syn -m limit --limit 100/s --limit-burst 200 -j ACCEPT
    }

    firewall_install
    add_checkmark 4
    sleep 5
}

while true; do
    clear
    echo -e "######################################################################################
#                                                                                    #
#                            Project 'RHQ - Firewall'                                #
#                                                                                    #
######################################################################################\n"

    show_menu
    read -p "Enter your choice: " choice </dev/tty

    case $choice in
        1)
            clear_firewall
            ;;
        2)
            list_firewall
            ;;
        3)
            restart_services
            ;;
        4)
            setup_firewall
            ;;
        5)
            echo "Exiting..."
            exit 0
            ;;
        *)
            echo "Invalid choice. Please select a valid option."
            sleep 2
            ;;
    esac
done
